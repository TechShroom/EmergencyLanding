/*
 * This file is part of EmergencyLanding, licensed under the MIT License (MIT).
 *
 * Copyright (c) TechShroom Studios <https://techshoom.com>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.techshroom.emergencylanding.library.shapeup.generated;

import com.flowpowered.math.vector.Vectord;

/**
 * Package-private interfaces to allow sharing of methods in PointSet without allowing PointSet.X as an instanceof PointSet.Y
 * Automatically generated by PCG on Tue, 19 Apr 2016 16:00:47 GMT. All edits will be discarded when regenerated.
 */
class HasXPoint {
    interface One<V extends Vectord> {
        V get1stPoint();
    }

    interface Two<V extends Vectord> extends One<V> {
        V get2ndPoint();
    }

    interface Three<V extends Vectord> extends Two<V> {
        V get3rdPoint();
    }

    interface Four<V extends Vectord> extends Three<V> {
        V get4thPoint();
    }

    interface Five<V extends Vectord> extends Four<V> {
        V get5thPoint();
    }

    interface Six<V extends Vectord> extends Five<V> {
        V get6thPoint();
    }

    interface Seven<V extends Vectord> extends Six<V> {
        V get7thPoint();
    }

    interface Eight<V extends Vectord> extends Seven<V> {
        V get8thPoint();
    }

    interface Nine<V extends Vectord> extends Eight<V> {
        V get9thPoint();
    }

    interface Ten<V extends Vectord> extends Nine<V> {
        V get10thPoint();
    }
}
